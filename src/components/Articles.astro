---
export interface Article {
  title: string;
  url: string;
  description: string;
  cover: string | null;
  emoji?: string;
}

export interface Props {
  articles: Article[];
}

const {articles} = Astro.props;
---

<ul class="list">
  {
    articles.map((article) => (
      <li class="article">
        <a href={article.url} rel="noopener">
          <div
            class:list={['cover', {empty: !article.cover}]}
            style={article.cover ? `background-image: url(${article.cover})` : ''}
          />
          <span>{article.title}</span>
          <p>{article.description}</p>
        </a>
      </li>
    ))
  }
</ul>

<style>
  .list {
    display: grid;
    gap: 1rem;
    padding: 0;
  }

  @media (min-width: 560px) {
    .list {
      grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    }
  }

  @media (max-width: 559px) {
    .article:nth-child(n + 4) {
      display: none;
    }
  }

  .article {
    @apply bg-white rounded-md flex flex-col gap-1 overflow-hidden;

    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px,
      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
    transition: box-shadow 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .article:hover {
    box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 8px, rgba(0, 0, 0, 0.2) 0px 13px 26px -3px,
      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  }

  .article .cover {
    @apply block bg-cover bg-center;
    aspect-ratio: 2.5;
  }

  .article .cover.empty {
    background-image: linear-gradient(45deg, #4f39fa, #da62c4 30%, #cffafe 60%);
    background-size: 400%;
    background-position: 50%;
  }

  .article span {
    @apply block px-4 py-2 font-light text-xl;
  }

  .article p {
    @apply px-4 py-3;
  }
</style>
