---
import type {Episode} from '../data/podcast';
import {getImage} from '@astrojs/image';

export interface Props {
  episodes: Episode[];
}

const originalEpisodes = Astro.props.episodes;
const episodes = await Promise.all(
  originalEpisodes.map(async (episode) => {
    const image = await getImage({
      src: episode.imageURL,
      width: 736,
      aspectRatio: 1.48,
      quality: 90,
    });
    return {
      ...episode,
      imageURL: image.src,
    };
  }),
);
---

<ul class="list">
  {
    episodes.map((episode) => (
      <li class="episode">
        <a href={episode.link} target="_blank" rel="noopener">
          <div class="cover" style={`background-image: url(${episode.imageURL})`}>
            <kbd>
              S{episode.season}:E{episode.episode}
            </kbd>
            <h3>{episode.title}</h3>
          </div>
          <p>{episode.description}</p>
        </a>
      </li>
    ))
  }
</ul>

<style>
  .list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }

  .episode {
    @apply bg-white rounded-md flex flex-col gap-1 overflow-hidden;

    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px,
      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
    transition: box-shadow 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }

  .episode:hover {
    box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 8px, rgba(0, 0, 0, 0.2) 0px 13px 26px -3px,
      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  }

  .episode .cover {
    @apply block h-64 bg-cover bg-center relative;
  }

  .episode .cover kbd {
    @apply float-right px-2 py-1 text-white bg-black/30 rounded-bl backdrop-blur;
  }

  .episode h3 {
    @apply absolute bottom-0 text-white block px-4 py-2 font-light backdrop-blur-xl bg-black/30 w-full;
  }

  .episode p {
    @apply px-4 py-3;
  }
</style>
